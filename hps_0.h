#ifndef _ALTERA_HPS_0_H_
#define _ALTERA_HPS_0_H_

/*
 * This file was automatically generated by the swinfo2header utility.
 * 
 * Created from SOPC Builder system 'soc_system' in
 * file './soc_system.sopcinfo'.
 */

/*
 * This file contains macros for module 'hps_0' and devices
 * connected to the following masters:
 *   h2f_axi_master
 *   h2f_lw_axi_master
 * 
 * Do not include this header file and another header file created for a
 * different module or master group at the same time.
 * Doing so may result in duplicate macro names.
 * Instead, use the system header file which has macros with unique names.
 */

/*
 * Macros for device 'sndHps', class 'altera_avalon_pio'
 * The macros are prefixed with 'SNDHPS_'.
 * The prefix is the slave descriptor.
 */
#define SNDHPS_COMPONENT_TYPE altera_avalon_pio
#define SNDHPS_COMPONENT_NAME sndHps
#define SNDHPS_BASE 0x0
#define SNDHPS_SPAN 32
#define SNDHPS_END 0x1f
#define SNDHPS_BIT_CLEARING_EDGE_REGISTER 0
#define SNDHPS_BIT_MODIFYING_OUTPUT_REGISTER 0
#define SNDHPS_CAPTURE 0
#define SNDHPS_DATA_WIDTH 5
#define SNDHPS_DO_TEST_BENCH_WIRING 0
#define SNDHPS_DRIVEN_SIM_VALUE 0
#define SNDHPS_EDGE_TYPE NONE
#define SNDHPS_FREQ 50000000
#define SNDHPS_HAS_IN 0
#define SNDHPS_HAS_OUT 1
#define SNDHPS_HAS_TRI 0
#define SNDHPS_IRQ_TYPE NONE
#define SNDHPS_RESET_VALUE 0

/*
 * Macros for device 'result', class 'altera_avalon_pio'
 * The macros are prefixed with 'RESULT_'.
 * The prefix is the slave descriptor.
 */
#define RESULT_COMPONENT_TYPE altera_avalon_pio
#define RESULT_COMPONENT_NAME result
#define RESULT_BASE 0x10
#define RESULT_SPAN 32
#define RESULT_END 0x2f
#define RESULT_BIT_CLEARING_EDGE_REGISTER 0
#define RESULT_BIT_MODIFYING_OUTPUT_REGISTER 0
#define RESULT_CAPTURE 0
#define RESULT_DATA_WIDTH 32
#define RESULT_DO_TEST_BENCH_WIRING 0
#define RESULT_DRIVEN_SIM_VALUE 0
#define RESULT_EDGE_TYPE NONE
#define RESULT_FREQ 50000000
#define RESULT_HAS_IN 1
#define RESULT_HAS_OUT 0
#define RESULT_HAS_TRI 0
#define RESULT_IRQ_TYPE NONE
#define RESULT_RESET_VALUE 0

/*
 * Macros for device 'sndFpga', class 'altera_avalon_pio'
 * The macros are prefixed with 'SNDFPGA_'.
 * The prefix is the slave descriptor.
 */
#define SNDFPGA_COMPONENT_TYPE altera_avalon_pio
#define SNDFPGA_COMPONENT_NAME sndFpga
#define SNDFPGA_BASE 0x20
#define SNDFPGA_SPAN 32
#define SNDFPGA_END 0x3f
#define SNDFPGA_BIT_CLEARING_EDGE_REGISTER 0
#define SNDFPGA_BIT_MODIFYING_OUTPUT_REGISTER 0
#define SNDFPGA_CAPTURE 0
#define SNDFPGA_DATA_WIDTH 5
#define SNDFPGA_DO_TEST_BENCH_WIRING 0
#define SNDFPGA_DRIVEN_SIM_VALUE 0
#define SNDFPGA_EDGE_TYPE NONE
#define SNDFPGA_FREQ 50000000
#define SNDFPGA_HAS_IN 1
#define SNDFPGA_HAS_OUT 0
#define SNDFPGA_HAS_TRI 0
#define SNDFPGA_IRQ_TYPE NONE
#define SNDFPGA_RESET_VALUE 0

/*
 * Macros for device 'dataHps', class 'altera_avalon_pio'
 * The macros are prefixed with 'DATAHPS_'.
 * The prefix is the slave descriptor.
 */
#define DATAHPS_COMPONENT_TYPE altera_avalon_pio
#define DATAHPS_COMPONENT_NAME dataHps
#define DATAHPS_BASE 0x30
#define DATAHPS_SPAN 32
#define DATAHPS_END 0x4f
#define DATAHPS_BIT_CLEARING_EDGE_REGISTER 0
#define DATAHPS_BIT_MODIFYING_OUTPUT_REGISTER 0
#define DATAHPS_CAPTURE 0
#define DATAHPS_DATA_WIDTH 32
#define DATAHPS_DO_TEST_BENCH_WIRING 0
#define DATAHPS_DRIVEN_SIM_VALUE 0
#define DATAHPS_EDGE_TYPE NONE
#define DATAHPS_FREQ 50000000
#define DATAHPS_HAS_IN 0
#define DATAHPS_HAS_OUT 1
#define DATAHPS_HAS_TRI 0
#define DATAHPS_IRQ_TYPE NONE
#define DATAHPS_RESET_VALUE 0


#endif /* _ALTERA_HPS_0_H_ */
